1. instale prisma 

npm i --save-dev prisma

2. cambie a mi bd de prisma el env

3. inicie prisma 

npx prisma init

4. instale prisma client 

npm install @prisma/client

5. instale componente de prisma nest g m prisma... s...

instalamos component de prisma, con servicio y modulo 

6. genere un recurso de producto 

nest g res products

7. genere en el schema el producto

8. migre a la bd 

npx prisma migrate --name producto

9. aplique un generate 

npx prisma generate

10. instale para los validationpipes 

npm i --save class-validator class-transformer 

11. configure en main 

 app.setGlobalPrefix('api');

  app.useGlobalPipes(
    new ValidationPipe({
      whitelist: true,
      forbidNonWhitelisted: true,
    })
  );

12. conigure en app.module

13. imports: [ConfigModule.forRoot(),

14 .defini dto de createproduct

si defino en el squema de prisma que algunos campos son opcionales debo hacer lo mismo en eld to 

15 envie producto y se creo tambien valide los campos


para paginar 

creo un dto de paginacion con offset y limit con las validaciones y transformaciones correspondientes 

llamo al dto en el findall del controller

 @Get()
  findAll(@Query() paginationDto: PaginationDto) {

    console.log(paginationDto)
    return this.productsService.findAll(paginationDto);
  }

recibo en el servicio la paginationDto

destructuro limit y offset del parametro paginationDto en el servicio findAll


uso el meetodo findMany y le paso al take y al skip limit y offset 

 const { limit = 10, offset = 0 } = paginationDto;
    return this.prismaService.product.findMany({
      take: limit,
      skip: offset,
      // relaciones
    });

luego en postman 

http://localhost:3001/api/products?limit=2&offset=2

y listo tengo paginacion